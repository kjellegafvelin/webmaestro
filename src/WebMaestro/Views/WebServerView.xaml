<UserControl x:Class="WebMaestro.Views.WebServerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WebMaestro.Views"
             xmlns:viewModels="clr-namespace:WebMaestro.ViewModels"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:WebMaestro.Converters"
             xmlns:ctrls="clr-namespace:WebMaestro.Controls"
             xmlns:cmds="clr-namespace:WebMaestro.Commands" 
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
             md:DialogServiceViews.IsRegistered="True"
             d:DataContext="{d:DesignInstance Type=viewModels:WebServerViewModel}"
             mc:Ignorable="d" Background="White"
             d:DesignHeight="600" d:DesignWidth="1800">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="httpMethods" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="viewModels:HttpMethods" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="boolToVisibility" />
        <converters:ElapsedTimeSpanConverter x:Key="elapsedTimeSpan" />
        <converters:SizeConverter x:Key="size" />
        <converters:NullToBooleanValueConverter x:Key="nullToBool"/>

        <Style x:Key="ImageEnabled" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="cmds:WindowCommands.SaveRequest" Executed="SaveRequestExecuted" />
    </UserControl.CommandBindings>
    <DockPanel>

        <Grid DockPanel.Dock="top" Height="100" Background="#2C65B1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition MinWidth="600" MaxWidth="800" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Label Foreground="#eeeeee" Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom">Enter server URL:</Label>
                
                <TextBox Name="txtUrl" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsNotStarted}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Response.Url, UpdateSourceTrigger=PropertyChanged}" 
                         Margin="0,3,0,0" Height="24" FontSize="14px" FontWeight="Bold" BorderThickness="0,0,0,2" BorderBrush="White" Background="Transparent" Foreground="White" VerticalAlignment="Top" Width="1000"/>
                
                <Button FontSize="14px" FontWeight="Bold" Height="28" Grid.Row="1" Grid.Column="1" Content="Start" IsEnabled="{Binding IsNotStarted}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="75" Command="{Binding StartCommand}">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button FontSize="14px" FontWeight="Bold" Height="28" Grid.Row="1" Grid.Column="2" Content="Stop" IsEnabled="{Binding IsStarted}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="75" Command="{Binding StopCommand}">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Label Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="0" VerticalAlignment="Bottom" FontSize="10px" Foreground="Red" Content="{Binding ErrorText}"></Label>
            </Grid>
        </Grid>


        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="2" Margin="3,0,3,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold" FontSize="14">Requests</Label>
                        <StackPanel Orientation="Horizontal" Grid.Column="2" >
                            <Button Width="22" Height="22" Click="ClearRequests" ToolTip="Clear requests">
                                <Image Source="/Resources/Images/ClearWindowContent_16x.png" Width="16" Height="16" />
                            </Button>
                            <Button Width="22" Height="22" Command="cmds:WindowCommands.SaveRequest" CommandParameter="{Binding SelectedItem.Request, ElementName=lvwHistory}" ToolTip="Save request" 
                                    IsEnabled="{Binding SelectedItem, ElementName=lvwHistory, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                <Image Source="/Resources/Images/Save_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}" />
                            </Button>
                        </StackPanel>
                    </Grid>

                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="311*"/>
                        <ColumnDefinition Width="82*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="250"/>
                        <RowDefinition Height="3" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ListView Name="lvwHistory" Grid.Row="0" ItemsSource="{Binding HistoryItems}" SelectionChanged="HistoryItemSelected" Grid.ColumnSpan="2" SelectionMode="Single">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="24">
                                    <GridViewColumn.Header>
                                        <Image Source="/Resources/Images/Lock_8x_16x.png" Width="16" Height="16" />
                                    </GridViewColumn.Header>
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style>
                                            <Setter Property="Control.ToolTip" Value="Marked items are kept when clearing history." />
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="/Resources/Images/Lock_8x_16x.png" Width="16" Height="16" Visibility="{Binding Keep, Converter={StaticResource boolToVisibility}}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="URL" Width="200" DisplayMemberBinding="{Binding Request.Url}"/>
                                <GridViewColumn Header="Method" Width="75" DisplayMemberBinding="{Binding Request.HttpMethod}"/>
                                <GridViewColumn Header="Date" Width="150" DisplayMemberBinding="{Binding Date, StringFormat=yyyy-MM-dd HH:mm:ss.fff}"/>
                                <GridViewColumn Header="Comment" Width="150" DisplayMemberBinding="{Binding Comment}"/>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="Open as New Request" Command="{Binding OpenRequest}" CommandParameter="{Binding Path=Parent.DataContext.Request, RelativeSource={RelativeSource Self}}"/>
                                            <Separator />
                                            <MenuItem Header="Keep" IsCheckable="True" IsChecked="{Binding Parent.DataContext.Keep, RelativeSource={RelativeSource Self}}" />
                                            <Separator />
                                            <MenuItem Header="Save Request to File" Command="{Binding SaveRequest}" CommandParameter="{Binding Path=Parent.DataContext.Request, RelativeSource={RelativeSource Self}}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Images/Save_16x.png" Width="16" Height="16" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <GridSplitter Grid.Row="1" ResizeDirection="Rows" HorizontalAlignment="Stretch" Height="3" Grid.ColumnSpan="2"/>

                    <TabControl Grid.Row="2" Grid.ColumnSpan="2">
                        <TabItem Header="Query Params">
                            <ListView  ItemsSource="{Binding SelectedItem.Request.QueryParams, ElementName=lvwHistory}" SelectionMode="Single">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Key}"/>
                                        <GridViewColumn Header="Value" Width="300" DisplayMemberBinding="{Binding Value}" />

                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Headers">
                            <ListView  ItemsSource="{Binding SelectedItem.Request.Headers, ElementName=lvwHistory}" SelectionMode="Single">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}"/>
                                        <GridViewColumn Header="Value" Width="300" DisplayMemberBinding="{Binding Value}" />

                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Body">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top" VerticalAlignment="Top" ToolBarTray.IsLocked="True" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
                                    <Label>Format:</Label>
                                    <ComboBox Name="cboReqContentType" Width="60" SelectionChanged="ContentTypeChanged"
                                              IsEnabled="{Binding SelectedItem, ElementName=lvwHistory, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                        <ComboBoxItem>Text</ComboBoxItem>
                                        <ComboBoxItem>XML</ComboBoxItem>
                                        <ComboBoxItem>JSON</ComboBoxItem>
                                        <ComboBoxItem>Form</ComboBoxItem>
                                    </ComboBox>
                                    <ToggleButton Name="togPrettyPrint" ToolTip="Prettify" IsChecked="True" Click="PrettyPrint"
                                                  IsEnabled="{Binding SelectedItem, ElementName=lvwHistory, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                        <Image Source="/Resources/Images/FormatDocument_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </ToggleButton>
                                    <Button ToolTip="Word wrap" Click="ReqBodyWordWrap"
                                                IsEnabled="{Binding SelectedItem, ConverterParameter=true, Converter={StaticResource nullToBool}, ElementName=lvwHistory}">
                                        <Image Source="/Resources/Images/WordWrap_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                    <Separator/>
                                    <Button ToolTip="Save to file" Click="SaveRequestBody"
                                            IsEnabled="{Binding SelectedItem, ElementName=lvwHistory, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                        <Image Source="/Resources/Images/Save_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                    <Separator/>
                                    <Button ToolTip="Search in body" Click="SearchRequestBody"
                                            IsEnabled="{Binding SelectedItem, ConverterParameter=true, Converter={StaticResource nullToBool}, ElementName=lvwHistory}">
                                        <Image Source="/Resources/Images/Search_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}" />
                                    </Button>
                                </ToolBar>
                                <avalonedit:TextEditor Name="editRequest" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SyntaxHighlighting="XML" FontFamily="Consolas" ShowLineNumbers="True" WordWrap="True" IsReadOnly="True" />
                                <!--<ListView Visibility="Hidden" SelectionMode="Single">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}"/>
                                            <GridViewColumn Header="Value" Width="300" DisplayMemberBinding="{Binding Value}" />

                                        </GridView>
                                    </ListView.View>
                                </ListView>-->
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Client Certificates">
                            <DockPanel>
                                <ListView x:Name="lvwClientCertificates" ItemsSource="{Binding SelectedItem.Request.Certificates, ElementName=lvwHistory}" SelectionMode="Single">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Subject" Width="300" DisplayMemberBinding="{Binding Subject}" />
                                            <GridViewColumn Header="Issuer" Width="150" DisplayMemberBinding="{Binding Issuer}" />
                                            <GridViewColumn Header="Expires" Width="80" DisplayMemberBinding="{Binding NotAfter, StringFormat=yyyy-MM-dd}"/>
                                            <GridViewColumn Header="Thumbprint" Width="300" DisplayMemberBinding="{Binding Thumbprint}"/>

                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </DockPanel>
                        </TabItem>

                    </TabControl>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="3"/>
            <ctrls:BusyIndicator Grid.Column="0" Margin="3,0,3,3" BusyContent="Server running"   IsBusy="{Binding IsStarted}">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition/>
                            <ColumnDefinition Width="130"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label FontWeight="Bold" FontSize="14" VerticalContentAlignment="Center">Response</Label>
                        <StackPanel Margin="0,0,10,0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
                            <Label VerticalContentAlignment="Center">Status:</Label>
                            <ComboBox Width="120" Height="22" SelectedIndex="4" SelectedValuePath="Tag" SelectedValue="{Binding Status}" Margin="0,6,0,4">
                                <ComboBoxItem Tag="100">100 - Continue</ComboBoxItem>
                                <ComboBoxItem Tag="101">101 - Switching Protocols</ComboBoxItem>
                                <ComboBoxItem Tag="102">102 - Processing</ComboBoxItem>
                                <Separator/>
                                <ComboBoxItem Tag="200">200 - OK</ComboBoxItem>
                                <ComboBoxItem Tag="201">201 - Created</ComboBoxItem>
                                <ComboBoxItem Tag="202">202 - Accepted</ComboBoxItem>
                                <ComboBoxItem Tag="203">203 - Non-authoritative Information</ComboBoxItem>
                                <ComboBoxItem Tag="204">204 - No Content</ComboBoxItem>
                                <ComboBoxItem Tag="205">205 - Reset Content</ComboBoxItem>
                                <ComboBoxItem Tag="206">206 - Partial Content</ComboBoxItem>
                                <ComboBoxItem Tag="207">207 - Multi-Status</ComboBoxItem>
                                <ComboBoxItem Tag="208">208 - Already Reported</ComboBoxItem>
                                <ComboBoxItem Tag="226">226 - IM Used</ComboBoxItem>
                                <Separator/>
                                <ComboBoxItem Tag="300">300 - Multiple Choices</ComboBoxItem>
                                <ComboBoxItem Tag="301">301 - Moved Permanently</ComboBoxItem>
                                <ComboBoxItem Tag="302">302 - Found</ComboBoxItem>
                                <ComboBoxItem Tag="303">303 - See Other</ComboBoxItem>
                                <ComboBoxItem Tag="304">304 - Not Modified</ComboBoxItem>
                                <ComboBoxItem Tag="305">305 - Use Proxy</ComboBoxItem>
                                <ComboBoxItem Tag="307">307 - Temporary Redirect</ComboBoxItem>
                                <ComboBoxItem Tag="308">308 - Permanent Redirect</ComboBoxItem>
                                <Separator/>
                                <ComboBoxItem Tag="400">400 - Bad Request</ComboBoxItem>
                                <ComboBoxItem Tag="401">401 - Unauthorized</ComboBoxItem>
                                <ComboBoxItem Tag="402">402 - Payment Required</ComboBoxItem>
                                <ComboBoxItem Tag="403">403 - Forbidden</ComboBoxItem>
                                <ComboBoxItem Tag="404">404 - Not Found</ComboBoxItem>
                                <ComboBoxItem Tag="405">405 - Method Not Allowed</ComboBoxItem>
                                <ComboBoxItem Tag="406">406 - Not Acceptable</ComboBoxItem>
                                <ComboBoxItem Tag="407">407 - Proxy Authentication Required</ComboBoxItem>
                                <ComboBoxItem Tag="408">408 - Request Timeout</ComboBoxItem>
                                <ComboBoxItem Tag="409">409 - Conflict</ComboBoxItem>
                                <ComboBoxItem Tag="410">410 - Gone</ComboBoxItem>
                                <ComboBoxItem Tag="411">411 - Length Required</ComboBoxItem>
                                <ComboBoxItem Tag="412">412 - Precondition Failed</ComboBoxItem>
                                <ComboBoxItem Tag="413">413 - Payload Too Large</ComboBoxItem>
                                <ComboBoxItem Tag="414">414 - Request-URI Too Long</ComboBoxItem>
                                <ComboBoxItem Tag="415">415 - Unsupported Media Type</ComboBoxItem>
                                <ComboBoxItem Tag="416">416 - Requested Range Not Satisfiable</ComboBoxItem>
                                <ComboBoxItem Tag="417">417 - Expectation Failed</ComboBoxItem>
                                <ComboBoxItem Tag="418">418 - I'm a teapot</ComboBoxItem>
                                <ComboBoxItem Tag="421">421 - Misdirected Request</ComboBoxItem>
                                <ComboBoxItem Tag="422">422 - Unprocessable Entity</ComboBoxItem>
                                <ComboBoxItem Tag="423">423 - Locked</ComboBoxItem>
                                <ComboBoxItem Tag="424">424 - Failed Dependency</ComboBoxItem>
                                <ComboBoxItem Tag="426">426 - Upgrade Required</ComboBoxItem>
                                <ComboBoxItem Tag="428">428 - Precondition Required</ComboBoxItem>
                                <ComboBoxItem Tag="429">429 - Too Many Requests</ComboBoxItem>
                                <ComboBoxItem Tag="431">431 - Request Header Fields Too Large</ComboBoxItem>
                                <ComboBoxItem Tag="444">444 - Connection Closed Without Response</ComboBoxItem>
                                <ComboBoxItem Tag="451">451 - Unavailable For Legal Reasons</ComboBoxItem>
                                <ComboBoxItem Tag="499">499 - Client Closed Request</ComboBoxItem>
                                <Separator/>
                                <ComboBoxItem Tag="500">500 - Internal Server Error</ComboBoxItem>
                                <ComboBoxItem Tag="501">501 - Not Implemented</ComboBoxItem>
                                <ComboBoxItem Tag="502">502 - Bad Gateway</ComboBoxItem>
                                <ComboBoxItem Tag="503">503 - Service Unavailable</ComboBoxItem>
                                <ComboBoxItem Tag="504">504 - Gateway Timeout</ComboBoxItem>
                                <ComboBoxItem Tag="505">505 - HTTP Version Not Supported</ComboBoxItem>
                                <ComboBoxItem Tag="506">506 - Variant Also Negotiates</ComboBoxItem>
                                <ComboBoxItem Tag="507">507 - Insufficient Storage</ComboBoxItem>
                                <ComboBoxItem Tag="508">508 - Loop Detected</ComboBoxItem>
                                <ComboBoxItem Tag="510">510 - Not Extended</ComboBoxItem>
                                <ComboBoxItem Tag="511">511 - Network Authentication Required</ComboBoxItem>
                                <ComboBoxItem Tag="599">599 - Network Connect Timeout Error</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Margin="0,0,10,0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" >
                            <Label VerticalContentAlignment="Center">Delay:</Label>
                            <ComboBox Width="80" Height="22" SelectedIndex="0" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding Delay, Mode=TwoWay}" ItemsSource="{Binding Delays}" Margin="0,6,0,4">
                            </ComboBox>
                        </StackPanel>
                    </Grid>

                    <TabControl Grid.Row="2">
                        <TabItem Header="Body">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top" VerticalAlignment="Top" ToolBarTray.IsLocked="True" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
                                    <Button ToolTip="Open file" Click="OpenResponseBody">
                                        <Image Source="/Resources/Images/OpenFile_16x.png" Width="16" Height="16" />
                                    </Button>
                                    <Separator/>
                                    <Label>Content-Type:</Label>
                                    <ComboBox Name="cboContentType" SelectionChanged="ResponseContentTypeChanged" SelectedIndex="0" Width="105" Margin="0" Text="{Binding Path=Response.ContentType, Mode=TwoWay}" IsEditable="True">
                                        <ComboBoxItem>text/plain</ComboBoxItem>
                                        <ComboBoxItem>application/xml</ComboBoxItem>
                                        <ComboBoxItem>application/json</ComboBoxItem>
                                    </ComboBox>
                                    <Button Name="btnPrettyPrint" ToolTip="Prettify" Click="PrettyPrintResponse">
                                        <Image Source="/Resources/Images/FormatDocument_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                    <Button ToolTip="Word wrap" Click="RespBodyWordWrap">
                                        <Image Source="/Resources/Images/WordWrap_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                    <Separator/>
                                    <Button ToolTip="Search in body" Click="SearchResponseBody">
                                        <Image Source="/Resources/Images/Search_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}" />
                                    </Button>
                                </ToolBar>
                                <avalonedit:TextEditor Name="editResponse"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SyntaxHighlighting="XML" FontFamily="Consolas" ShowLineNumbers="True" />
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Headers">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top" VerticalAlignment="Top" ToolBarTray.IsLocked="True" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
                                    <Button Command="{Binding AddHeaderCommand}" ToolTip="Add header">
                                        <Image Source="/Resources/Images/Add_16x.png" Width="16" Height="16" />
                                    </Button>
                                    <Button Command="{Binding RemoveHeaderCommand}" ToolTip="Remove header" 
                                        IsEnabled="{Binding SelectedResponseHeader, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                        <Image Source="/Resources/Images/Remove_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                    <Button Command="{Binding EditHeaderCommand}" ToolTip="Edit header" 
                                        IsEnabled="{Binding SelectedResponseHeader, Converter={StaticResource nullToBool}, ConverterParameter=true}">
                                        <Image Source="/Resources/Images/Edit_16x.png" Width="16" Height="16" Style="{StaticResource ImageEnabled}"/>
                                    </Button>
                                </ToolBar>

                                <ListView ItemsSource="{Binding Response.Headers}" SelectedItem="{Binding SelectedResponseHeader}" SelectionMode="Single">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="32">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding IsEnabled}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}" />
                                            <GridViewColumn Header="Value" Width="400" DisplayMemberBinding="{Binding Value}" />
                                            <GridViewColumn Header="Description" Width="400" DisplayMemberBinding="{Binding Description}" />
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Options">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="24" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0">Transfer Encoding:</Label>
                                <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding TransferEncodingChunked}" Content="Chunked" VerticalAlignment="Center"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </ctrls:BusyIndicator>
        </Grid>

    </DockPanel>
</UserControl>
